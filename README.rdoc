== Spillio


This is the code repository for project Spillio.

Please take a minute to read the following https://www.atlassian.com/git/workflows#!workflow-feature-branch
on git workflow. I believe that the workflow described in the article is what we should
utilize for this project plus the following two rule: Do NOT push to parent branches before
you tested your code both on your development environment and the production
environment (in this case Heroku). We want to make sure to start working on new features,
additions, updates, etc.. on top of WORKING code.


== Troubleshooting

* The new branch I pulled from ain't workin...

  bundle install  
  
  rake db:migrate:reset  
  
  rake db:seed  

* CalNet says this is not an authorized page

  open localhost:3000 in your browser and try again



== Instructions for deployment to Heroku


Go to project folder (ie., the one that contains app/, config/...)

0.- Add heroku remote (if you haven't already done so):
  git remote add heroku git@heroku.com:spillio.git

1.- If you added or modified any asset (css, js, img) then:
* Update asset version: Go to config/application.rb and change the config.assets.version to something higher.
* Precompile assets: run

  RAILS_ENV=production exec rake assets:precompile

2.- Make a new commit. Make sure that you are committing all your changes, plus changes created by steps 1.1 and 1.2

3.- Push commit to github (push origin master) and to heroku (push heroku master)

4.- If you modified the db, run:
  heroku run rake db:migrate
  heroku run rake db:seed # Do not run this if we don't want to prefill any data in the db

5.- If the db change is very drastic, db:migrate may fail. In such case, we'd like to reset the db (WARNING: this erases all content) with
  heroku run pg:reset

6.- Rejoice


== Instruction to import the gostgres db from heroku to localhost

1.heroku pgbackups:capture

2.heroku pgbackups:url <backup name>

3.download the dump file

4.pg_restore --verbose --clean --no-acl --no-owner -h localhost -U myapp -d myapp_development ~/Downloads/<backup name>.dump